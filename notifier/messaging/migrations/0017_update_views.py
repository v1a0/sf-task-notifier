# Generated by Django 4.1.5 on 2023-01-29 16:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('messaging', '0016_remove_messagingevent_text_messagingevent_text_col'),
    ]

    operations = [
        migrations.RunSQL("""
            drop view if exists processing_messages;
            drop view if exists active_messages;
            
            Create or replace view active_messages AS (
                SELECT
                    row_number() over (order by event.id, msg.id) as id,
 
                    event.id as event_id,
                    event.title as event_title,
                    event.stop_at as stop_at,
 
                    txt.id as text_id,
                    COALESCE(txt.text, '(no data)') as text,
 
                    msg.id as message_id,
                    msg.status as status,
                    msg.updated_by_task as updated_by_task,
 
                    adr.id as addressee_id,
                    adr.phone_number as phone_number
                FROM messaging_messagingevent AS event
                INNER JOIN messaging_scheduledmessage msg on event.id = msg.event_id
                LEFT JOIN addressee_addressee adr on msg.addressee_id = adr.id
                LEFT JOIN messaging_messagetext txt on event.text_id = txt.id 
                WHERE (
                    msg.status < 300
                    AND (event.start_at <= now())
                    AND (event.stop_at > now())
                )
                ORDER BY msg.status desc, event.id
            );
 
            Create or replace view processing_messages AS (
                SELECT
                    row_number() over (order by event.id, msg.id) as id,
 
                    event.id as event_id,
                    event.title as event_title,
                    event.stop_at as stop_at,
                 
                    txt.id as text_id,
                    COALESCE(txt.text, '(no data)') as text_value,
 
                    msg.id as message_id,
                    msg.status as status,
                    msg.updated_by_task as updated_by_task,
 
                    adr.id as addressee_id,
                    adr.phone_number as phone_number
                FROM messaging_messagingevent AS event
                INNER JOIN messaging_scheduledmessage msg on event.id = msg.event_id
                LEFT JOIN addressee_addressee adr on msg.addressee_id = adr.id
                LEFT JOIN messaging_messagetext txt on event.text_id = txt.id 
                WHERE (
                    msg.status = 300
                    AND (event.start_at <= now())
                    AND (event.stop_at > now())
                )
                ORDER BY msg.status desc, event.id
            )
            """)
    ]
